{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useRef, useState } from 'react';\nimport { Container } from './styles';\nimport { Input, Button } from '@material-ui/core';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nvar serverUrl = 'https://139.59.40.3:3001';\n\nvar Login = function Login() {\n  var router = useRouter();\n  var nameRef = useRef();\n  var emailRef = useRef();\n  var passwordRef = useRef();\n  var dispatch = useDispatch();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var handleSubmit = function handleSubmit() {\n    var name = nameRef.current.value;\n    var email = emailRef.current.value;\n    var password = passwordRef.current.value;\n\n    if (email.length < 0) {\n      setError('Please enter valid email id');\n    }\n\n    if (password.length < 4) {\n      setError('Please Enter password of atleast 4 characters');\n    }\n\n    ;\n    var response = axios.post(serverUrl + '/login', {\n      email: email,\n      password: password\n    });\n    response.then(function (data) {\n      if (data.data === \"Wrong password, unable to login\") {\n        setError('You have enteredt wrong password or email');\n        return;\n      }\n\n      if (data.data === 'User not found') {\n        setError('Please register to continue');\n        router.push({\n          pathname: '/register'\n        });\n        return;\n      }\n\n      dispatch({\n        type: 'LOGIN_EMAIL',\n        payload: {\n          email: email,\n          name: name\n        }\n      });\n      setError('Successfully logged in');\n      router.push({\n        pathname: '/car-search'\n      });\n    })[\"catch\"](function (e) {\n      return e;\n    });\n  };\n\n  return React.createElement(Container, null, React.createElement(Input, {\n    placeholder: \"Enter name\",\n    name: \"name\",\n    type: \"name\",\n    inputRef: nameRef\n  }), React.createElement(\"br\", null), React.createElement(Input, {\n    placeholder: \"Enter email\",\n    name: \"email\",\n    type: \"email\",\n    inputRef: emailRef\n  }), React.createElement(\"br\", null), React.createElement(Input, {\n    placeholder: \"Enter password\",\n    name: \"password\",\n    type: \"password\",\n    inputRef: passwordRef\n  }), React.createElement(\"br\", null), React.createElement(\"br\", null), error ? React.createElement(\"p\", null, error) : null, React.createElement(\"br\", null), React.createElement(\"br\", null), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: function onClick() {\n      return handleSubmit();\n    }\n  }, \"Login\"));\n};\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}